/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.ncc.kiran.laptop_store_managent.views;

import edu.ncc.kiran.laptop_store_managent.controllers.CustomerManagement;
import edu.ncc.kiran.laptop_store_managent.controllers.Database;
import edu.ncc.kiran.laptop_store_managent.controllers.SupCtrl;
import edu.ncc.kiran.laptop_store_managent.models.CustomerInfo;
import edu.ncc.kiran.laptop_store_managent.models.LaptopInfo;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author kiran
 */
public class ViewAllCustomer extends javax.swing.JDialog {

    /**
     * Creates new form ViewAllCustomer
     */
    CustomerManagement cusMgmt;
    DefaultTableModel customerTbl;
    private PreparedStatement pstat;
    private ResultSet rs;
    private Connection conn;
    //  private SupCtrl supCtr;
    Database db = new Database();

    public ViewAllCustomer(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        db.GetDbConnection();
        conn = db.conn;
        //    supCtr = new SupCtrl();
        showAllCustomer();
        fillComboLapModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        customerTable = new javax.swing.JTable();
        btnShowAllCustomer = new javax.swing.JButton();
        btnLatestCustomer = new javax.swing.JButton();
        cmbLapModel = new javax.swing.JComboBox();
        lblEmail1 = new javax.swing.JLabel();
        lblMiddleName = new javax.swing.JLabel();
        txtContactNo = new javax.swing.JTextField();
        lblFirstname = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        txtMiddleName = new javax.swing.JTextField();
        txtLastName = new javax.swing.JTextField();
        lblEmail = new javax.swing.JLabel();
        txtFirstName = new javax.swing.JTextField();
        lblLastName = new javax.swing.JLabel();
        lblContactNo = new javax.swing.JLabel();
        txtAddress = new javax.swing.JTextField();
        lblAddress = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtCustomerId = new javax.swing.JTextField();
        btnUpdate = new javax.swing.JButton();
        lblMessage = new javax.swing.JLabel();
        btnDelete = new javax.swing.JButton();
        lblFirstname1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        customerTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        customerTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                customerTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(customerTable);

        btnShowAllCustomer.setText("Show all customer ");
        btnShowAllCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowAllCustomerActionPerformed(evt);
            }
        });

        btnLatestCustomer.setText("latest customer");
        btnLatestCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLatestCustomerActionPerformed(evt);
            }
        });

        cmbLapModel.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "please select" }));

        lblEmail1.setText("Laptop model no :");

        lblMiddleName.setText("Middle Name :");

        lblFirstname.setText("First Name :");

        lblEmail.setText("Email :");

        lblLastName.setText("Last Name :");

        lblContactNo.setText("Contact No :");

        lblAddress.setText("Address :");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 204));
        jLabel7.setText("Please, Select Customer To Update,Delete and View");

        txtCustomerId.setEditable(false);

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        lblFirstname1.setText("Customer id :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnShowAllCustomer)
                                .addGap(18, 18, 18)
                                .addComponent(btnLatestCustomer))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblFirstname, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblMiddleName, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblContactNo, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblEmail1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnUpdate)
                                    .addComponent(lblFirstname1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(71, 71, 71)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(txtLastName)
                                        .addComponent(txtContactNo)
                                        .addComponent(txtAddress)
                                        .addComponent(txtEmail)
                                        .addComponent(cmbLapModel, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtFirstName, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtMiddleName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtCustomerId, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(btnDelete))))
                        .addGap(493, 493, 493)
                        .addComponent(lblMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 620, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addComponent(lblMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnShowAllCustomer)
                            .addComponent(btnLatestCustomer))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCustomerId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblFirstname1, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblFirstname, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(2, 2, 2))
                            .addComponent(txtFirstName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblMiddleName, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMiddleName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblContactNo, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtContactNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmbLapModel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblEmail1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnUpdate)
                            .addComponent(btnDelete))
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public final void showAllCustomer() {
        cusMgmt = new CustomerManagement();
        customerTbl = new DefaultTableModel();
        ArrayList<CustomerInfo> users = cusMgmt.listAllCustomers();
        String[] columns = {"customer_id", "first_name", /*"middle_name",
             "last_name", "contact_no", "address", "email"*/ "laptop_model"};
        customerTbl.setColumnIdentifiers(columns);
        for (CustomerInfo user : users) {
            customerTbl.addRow(new Object[]{user.getCustomer_id(), user.getFirst_name(), /*user.getMiddle_name(),
                 user.getLast_name(), user.getContact_no(), user.getAddress(), user.getEmail()*/
                user.getLapInfo().getModel_no()});
        }

        customerTable.setModel(customerTbl);
    }

    public final void showLatestCustomer() {
        cusMgmt = new CustomerManagement();
        customerTbl = new DefaultTableModel();
        ArrayList<CustomerInfo> users = cusMgmt.listLatestCustomers();
        String[] columns = {"customer_id", "first_name", /*"middle_name",
             "last_name", "contact_no", "address", "email"*/ "laptop_model"};
        customerTbl.setColumnIdentifiers(columns);
        for (CustomerInfo user : users) {
            customerTbl.addRow(new Object[]{user.getCustomer_id(), user.getFirst_name(), /*user.getMiddle_name(),
                 user.getLast_name(), user.getContact_no(), user.getAddress(), user.getEmail()*/
                user.getLapInfo().getModel_no()});
        }

        customerTable.setModel(customerTbl);
    }

    private void fillComboLapModel() {
        try {
            String sql = "select model_no from tbl_laptop";
            pstat = conn.prepareStatement(sql);
            rs = pstat.executeQuery();

            while (rs.next()) {
                String lapModel = rs.getString("model_no");
                cmbLapModel.addItem(lapModel);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "error = " + e);
        }
    }

    private void customerTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_customerTableMouseClicked
        // TODO add your handling code here:

        try {
            int row = customerTable.getSelectedRow();
            String rowClick = (customerTable.getModel().getValueAt(row, 0).toString());
            String sql = "select tc.customer_id, tc.first_name, tc.middle_name, tc.last_name, tc.contact_no, tc.address, tc.email, tcp.laptop_id "
                    + "from tbl_customer tc inner join tbl_customer_laptop tcp "
                    + "on tc.customer_id = tcp.customer_id "
                    + "where tc.customer_id = '" + rowClick + "'";
            pstat = conn.prepareStatement(sql);
            rs = pstat.executeQuery();
            if (rs.next()) {
                String id = rs.getString("customer_id");
                txtCustomerId.setText(id);
                String fname = rs.getString("first_name");
                txtFirstName.setText(fname);
                String mname = rs.getString("middle_name");
                txtMiddleName.setText(mname);
                String lname = rs.getString("last_name");
                txtLastName.setText(lname);
                String contact = rs.getString("contact_no");
                txtContactNo.setText(contact);
                String address = rs.getString("address");
                txtAddress.setText(address);
                String email = rs.getString("email");
                txtEmail.setText(email);
                cmbLapModel.setSelectedItem(customerTable.getModel().getValueAt(row, 2).toString());

            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_customerTableMouseClicked

    private void btnShowAllCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowAllCustomerActionPerformed
        // TODO add your handling code here:
        showAllCustomer();
    }//GEN-LAST:event_btnShowAllCustomerActionPerformed

    private void btnLatestCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLatestCustomerActionPerformed
        // TODO add your handling code here:
        showLatestCustomer();
    }//GEN-LAST:event_btnLatestCustomerActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        String fname = txtFirstName.getText();
        String lname = txtLastName.getText();
        String contact = txtContactNo.getText();
        String address = txtAddress.getText();
        String Email = txtEmail.getText();

        if (!Validate.checkEmpty(fname)) {
            if (!Validate.checkEmpty(lname)) {
                if (!Validate.checkEmpty(contact)) {
                    if (!Validate.checkEmpty(address)) {
                        if (!Validate.checkEmpty(Email)) {
                            if (!Validate.checkLength(fname)) {
                                if (!Validate.checkLength(lname)) {
                                    if (!Validate.checkContactLength(contact)) {
                                        if (!Validate.checkAdressLength(address)) {
                                            if (!Validate.checkEmailLength(Email)) {
                                                CustomerInfo objCustomerInfo = new CustomerInfo();
                                                CustomerManagement objCustomerManage = new CustomerManagement();

                                                objCustomerInfo.setCustomer_id(Integer.parseInt(this.txtCustomerId.getText()));
                                                objCustomerInfo.setFirst_name(this.txtFirstName.getText());
                                                objCustomerInfo.setMiddle_name(this.txtMiddleName.getText());
                                                objCustomerInfo.setLast_name(this.txtLastName.getText());
                                                objCustomerInfo.setContact_no(this.txtContactNo.getText());
                                                objCustomerInfo.setAddress(this.txtAddress.getText());
                                                objCustomerInfo.setEmail(this.txtEmail.getText());

                                                String brand = (String) cmbLapModel.getSelectedItem();
                                                SupCtrl supCtrl = new SupCtrl();
                                                LaptopInfo laptopInfo = supCtrl.findLaptopInfoByModel(brand);
                                                objCustomerInfo.setLapInfo(laptopInfo);

                                                if (objCustomerManage.Update(objCustomerInfo) == true) {

                                                    JOptionPane.showMessageDialog(null, "Record Update Sucessfully");
                                                    showAllCustomer();
                                                } else {
                                                    JOptionPane.showMessageDialog(null, "Error to Update Record");
                                                }
                                            } else {
                                                JOptionPane.showMessageDialog(null, "email length should be greater than 10");
                                            }
                                        } else {
                                            JOptionPane.showMessageDialog(null, "address length should be between 5-50");
                                        }
                                    } else {
                                        JOptionPane.showMessageDialog(null, "contact length should be 10 digit");
                                    }
                                } else {
                                    JOptionPane.showMessageDialog(null, "last name should be between 3-15");
                                }
                            } else {
                                JOptionPane.showMessageDialog(null, "first name should be between 3-15");
                            }

                        } else {
                            JOptionPane.showMessageDialog(null, "email can not be empty");
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "address can not be empty");
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "contact can not be empty");
                }
            } else {
                JOptionPane.showMessageDialog(null, "last name can not be empty");
            }
        } else {
            JOptionPane.showMessageDialog(null, "first name can not be empty");
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        CustomerInfo objCustomerInfo = new CustomerInfo();
        CustomerManagement objCustomerManage = new CustomerManagement();

        objCustomerInfo.setCustomer_id(Integer.parseInt(this.txtCustomerId.getText()));
        objCustomerInfo.setFirst_name(this.txtFirstName.getText());
        objCustomerInfo.setMiddle_name(this.txtMiddleName.getText());
        objCustomerInfo.setLast_name(this.txtLastName.getText());
        objCustomerInfo.setContact_no(this.txtContactNo.getText());
        objCustomerInfo.setAddress(this.txtAddress.getText());
        objCustomerInfo.setEmail(this.txtEmail.getText());

        String brand = (String) cmbLapModel.getSelectedItem();
        SupCtrl supCtrl = new SupCtrl();
        LaptopInfo laptopInfo = supCtrl.findLaptopInfoByModel(brand);
        objCustomerInfo.setLapInfo(laptopInfo);

        if (objCustomerManage.deleteCustomer(objCustomerInfo) == true) {
            JOptionPane.showMessageDialog(null, "Delete Record Successfully");
            reset();
        } else {
            JOptionPane.showMessageDialog(null, "Error to Delete Record");
        }
        showAllCustomer();
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void reset() {
        txtCustomerId.setText("");
        txtFirstName.setText("");
        txtMiddleName.setText("");
        txtLastName.setText("");
        txtContactNo.setText("");
        txtAddress.setText("");
        txtEmail.setText("");
        lblMessage.setText("");
    }

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnLatestCustomer;
    private javax.swing.JButton btnShowAllCustomer;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox cmbLapModel;
    private javax.swing.JTable customerTable;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAddress;
    private javax.swing.JLabel lblContactNo;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblEmail1;
    private javax.swing.JLabel lblFirstname;
    private javax.swing.JLabel lblFirstname1;
    private javax.swing.JLabel lblLastName;
    private javax.swing.JLabel lblMessage;
    private javax.swing.JLabel lblMiddleName;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtContactNo;
    private javax.swing.JTextField txtCustomerId;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtFirstName;
    private javax.swing.JTextField txtLastName;
    private javax.swing.JTextField txtMiddleName;
    // End of variables declaration//GEN-END:variables
}
